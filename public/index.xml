<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog of Feifan Cheng</title>
    <link>/</link>
    <description>Recent content on Blog of Feifan Cheng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jupyter notebook服务器端安装</title>
      <link>/2018/09/19/jupyter-notebook/</link>
      <pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/19/jupyter-notebook/</guid>
      <description>因为之前一直使用团队服务器挂掉了，现在开始用组内的服务器。平常用习惯了 Jupyter notebook ，所以也考虑在组内服务器上使用，并在网页端访问。其实整个配置过程非常简单。一般在服务器上安装了Anaconda之后，就会自带 Jupyter notebook ，因此就只剩下配置了。
 配置过程  生成配置文件
jupyter notebook --generate-config   进入 python 界面中，使用命令设置 password  from notebook.auth import passwd passwd()  或者是
$ jupyter notebook password   生成ssl证书  openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout mykey.key -out mycert.pem   更改配置文件 /root/.jupyter/jupyter_notebook_config.py  # Set options for certfile, ip, password, and toggle off # browser auto-opening c.NotebookApp.certfile = u&#39;/absolute/path/to/your/certificate/mycert.pem&#39; c.NotebookApp.keyfile = u&#39;/absolute/path/to/your/certificate/mykey.</description>
    </item>
    
    <item>
      <title>2018年第一次组会</title>
      <link>/2018/09/17/2018/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/17/2018/</guid>
      <description>毕可鑫：中粮米粒留皮率识别和碎米识别，留皮率识别利用颜色区别（KNN算法），碎米率利用米粒长径来判断
刘昊雨：氢燃料电池，存在诸多薄弱环节，需要消除产业发展制约因素。</description>
    </item>
    
    <item>
      <title>条件变分自动编码器（Conditional variational auoencoder）</title>
      <link>/2018/09/17/conditional-variational-auoencoder/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/17/conditional-variational-auoencoder/</guid>
      <description>1 概述 2 Getting started 2.1 A small example 2.2 variational autoencoder    1 概述 keras 作为深度学习的框架之一，之前一直用 python 来写 keras 的代码，但是R语言支持keras，有一个想法就是，利用条件自动编码器来生成数据用于训练，所以用 R 中 keras 来编写一下模型。
 2 Getting started 安装 keras 的包
install.packages(&amp;quot;keras&amp;quot;) keras 默认使用 tensorflow 作为后台，如果需要更改，请参见install_keras()的帮助
library(keras) ## Warning: 程辑包&amp;#39;keras&amp;#39;是用R版本3.4.4 来建造的 install_keras() ## Creating virtualenv for TensorFlow at ~/.virtualenvs/r-tensorflow ## Installing TensorFlow ... ## ## Installation complete. 2.1 A small example # prepare data library(keras) mnist &amp;lt;- dataset_mnist() x_train &amp;lt;- mnist$train$x y_train &amp;lt;- mnist$train$y x_test &amp;lt;- mnist$test$x y_test &amp;lt;- mnist$test$y # reshape x_train &amp;lt;- array_reshape(x_train, c(nrow(x_train), 784)) x_test &amp;lt;- array_reshape(x_test, c(nrow(x_test), 784)) # rescale x_train &amp;lt;- x_train / 255 x_test &amp;lt;- x_test / 255 y_train &amp;lt;- to_categorical(y_train, 10) y_test &amp;lt;- to_categorical(y_test, 10) # define the model model &amp;lt;- keras_model_sequential() model %&amp;gt;% layer_dense(units = 256, activation = &amp;#39;relu&amp;#39;, input_shape = c(784)) %&amp;gt;% layer_dropout(rate = 0.</description>
    </item>
    
    <item>
      <title>感情的问题</title>
      <link>/2018/09/16/%E6%84%9F%E6%83%85%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/16/%E6%84%9F%E6%83%85%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>感情其实是一件非常微妙的事情，让一个大气的男人变得小气。另外一个方面，我也有许多做的不对的地方。
 太幼稚了，完全没有考虑我女朋友工作的辛苦，也没有体会她的委屈，她把最珍贵的年华给了我，但是我却因为一时吃醋，而意气用事。加上女朋友的工作很忙，又来了大姨妈，每次都是火上浇油。
 如果女朋友生气了，第一件事情就是认错，她怎么骂，都一直在认错。然后不停的道歉，不停地给她发红包，反正就不应该让她觉得受到了冷落。
 生气之后，第一时间打电话给她，认错悔改。重要的是态度，而不是道理。
  的确感觉每次女朋友生气之后，我都有一些无奈。男生的确应该迁就一下女生，不能这么小气。</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>我是程非凡，清华大学博士僧一枚。我看到 blogdown 已经很久了，一直都想着用 Rmarkdown 直接写博文，但是因为懒，一直都没有弄。终于有一天，我觉得要开始把自己学的东西和思考东西写下来，所以我搭建了这个博客。争取每个星期写一篇博文，有生活的，人生感悟以及科研方面的内容。希望自己能坚持下去，写于2018年9月15号。</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>/contact/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/contact/</guid>
      <description>姓名：程非凡
邮箱：chengff15@mails.tsinghua.edu.cn</description>
    </item>
    
    <item>
      <title>First blogdown</title>
      <link>/2018/09/15/first-blogdown/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/15/first-blogdown/</guid>
      <description>第一篇博文 非常感谢yihui xie写出的 blogdown ，因为他用不习惯写 blog 的一些软件，才有了 blogdown 。的确是找到了痛点，才能够有所进步。感觉在清华本科毕业之后，博士生涯的进步都非常慢，一部分因为自己懈怠了，另外一部分可能是自己的研究并没有解决生活中的痛点。其实，我一直都想着成为一个金融行业的从业者，但是因为自己随波逐流，还在原来的专业里面，成为了一个化工的博士。虽然是数据方向，但是老师给的指导有限，导致研究的进展非常缓慢。而且我自己也是一个完美主义的人，任何事情想着怎么才可以做的完美，导致自己写的文章很少，而且经常追求那些华而不实的东西；另外一个方面，我是一个不喜欢总结，老是喜欢学新东西的人，这一点的确是让人烦恼，基本上别人提的东西你都有一个大致的概念，但是没有特别深入了解。
写下这个博客，也是因为这句话‘你会记得你所写下的，但是你会忘记你所学以及所说的’，与君共勉。</description>
    </item>
    
    <item>
      <title>Rmarkdown中的dashboard</title>
      <link>/2018/09/15/rmarkdown-dashboard/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/15/rmarkdown-dashboard/</guid>
      <description> Dashboard 最近因为项目的需求，需要做一个演示的网站。之前对于R语言中的dashboard有一些印象，所以准备用dashboard做一个。
关于Dashboard学习的一些网站：
 flexdashboard R Markdown: The Definitive Guide  在dashboard中，首先将需要的包和内容放在setup里
library(dygraphs)  在dashboard中，每个页面的分级用
=========================================
页面中每一栏可以用
Column -----------------------------------------  每一节内容可以markdown的三号标题替代，这里要说tabnet的性质，如果不想整个页面在Dashboard上铺开，在后面加上这个性质
另外，要在dashboard上增加shiny的组件，可以考虑在目标栏上添加
runtime: shiny  </description>
    </item>
    
  </channel>
</rss>