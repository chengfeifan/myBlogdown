<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Blog of Feifan Cheng</title>
    <link>/post/</link>
    <description>Recent content in Posts on Blog of Feifan Cheng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>三周年纪念</title>
      <link>/2018/11/01/%E4%B8%89%E5%91%A8%E5%B9%B4%E7%BA%AA%E5%BF%B5/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/01/%E4%B8%89%E5%91%A8%E5%B9%B4%E7%BA%AA%E5%BF%B5/</guid>
      <description>转眼间和我家小姨妈在一起三年了，这是我第一次谈恋爱，也是最后一次谈恋爱。可能开始的时候，我们都没有想过会谈这么久，但是遇见彼此之后，我觉得可以和亲爱的在一起一辈子。
回顾三年时光，虽然经常遇到一些问题，但是最后都得到了解决。虽然北航离清华并不算远，但是骑自行车过去也比较辛苦，为了能够方便去找小姨妈，在一起的一周后就去清华西门买了一辆小电驴，代号为‘程坚强’。无论寒风酷暑，只要方便就想着去找小姨妈，因为两个人一起就会有家的感觉。‘程坚强’也陪伴了我们三年，也陪着我们奔波了几万公里。因为两个人都非常优秀，碰上吵架，两个人都不肯低头，小矛盾就会激化成大矛盾。我又是那种比较正经的人，不会轻易地说出自己还没有做到的事情，也不是很会照顾女孩子的情绪，小姨妈三年来有过嫌弃但是从来没有抛弃我，感谢亲爱的一直都陪在我的身边。不管我们之间发生过什么事情都不足以摧垮我们，因为我们知道我们深爱着彼此，美好的爱情需要用心经营，希望我们都能有多些仪式感，多些为对方着想，多些关心和问候。三年来，想过很多解决方案，但是都很难实践下去。以及每个月的一份情书，我也只是坚持了一年，批评懒懒的我。今后，也请亲爱的多多包涵，我也要担当起责任，照顾好亲爱的。
两个人相处，最重要的是理解和信任。我们两个人的相处方式都很理性，不存在过分的无理取闹。我想，两个人相处，并不是谁离开了谁就不可以，而是有你更好，没你我也一样行。我们处在这种状态，我觉得也挺好的。平常像朋友一般，一起逗比。经过很多次矛盾之后，我们也了解了彼此，相互理解和信任。
旅行是一件好事情，会让我们懂得珍惜彼此。钱钟书说过：“你们去旅行回来，如果发现还爱着彼此，那说明你们适合在一起。”在一起的第一年里，我们就去很多地方进行短途旅行。2016年3月，第一次和亲爱的一起去平遥古城，两个人一起拍了好多好多照片；后面又去了承德避暑山庄，吃了满清八大碗（虽然不好吃）；后面又去北戴河一起摸鱼；2017年初，一起去了日本，一起登上晴空塔，欣赏东京的夜景；一路狂奔下，在美丽的富士山底下，在雪地里看到美丽的烟花，最后冻得瑟瑟发抖的两人吃了一碗好吃的拉面。2017年5月，我们一起去马来西亚度假，一起去了东南亚最高峰神山，去了漂亮的美人鱼岛，欣赏暴雨过后的海滩，在丹绒亚路欣赏美丽的夕阳。2017年暑假，在上海实习的你和在嘉兴实践的我一起畅游了上海周边，南京、苏州和杭州。2018年上半年，没有和亲爱的一起毕业旅行，是一件遗憾的事情。我从美国回来之后，我们又一起去了乌镇和扬州，再次领略江南水乡的美丽。虽然和亲爱的一起看过很多的风景，但这还远远不够，希望之后我们的足迹可以遍布七大洲四大洋。
三年之际，写给未来的我。我要好好挣钱，努力工作，争取早日实现财务自由，带领亲爱的去环游世界。另外一方面，短期的目标，希望和亲爱的在1314天登个记，然后两三年内办个婚礼。
爱你，亲爱的，三年周年纪念日快乐！感谢一路的陪伴！让我们一直走下去！</description>
    </item>
    
    <item>
      <title>化工过程可解释的故障诊断方法研究</title>
      <link>/2018/10/23/%E5%8C%96%E5%B7%A5%E8%BF%87%E7%A8%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E7%9A%84%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E6%96%B9%E6%B3%95%E7%A0%94%E7%A9%B6/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/23/%E5%8C%96%E5%B7%A5%E8%BF%87%E7%A8%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E7%9A%84%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E6%96%B9%E6%B3%95%E7%A0%94%E7%A9%B6/</guid>
      <description>方法 参考文献 1.Fault Detection and Pathway Analysis using a Dynamic Bayesian Network
文献内容分析  研究背景  Timely detection and diagnosis of the root cause of the fault are important to assure process safety, reliable operation, product quality and optimum operational cost.
即时的故障诊断和监测（根原因诊断）对于保障过程安全，可靠性操作，产品质量和最优操作成本具有重要意义。
Data based statistical process monitoring (SPM) tools are popular in the process industries
数据驱动的统计监测方法在流程工业上有许多应用
These methods are not always successful in fault propagation pathway analysis (Yu and Rashid, 2013) and often take longer to present the analysis (Gharahbagheri et al.</description>
    </item>
    
    <item>
      <title>jupyter notebook的目录</title>
      <link>/2018/10/21/jupyter-notebook/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/21/jupyter-notebook/</guid>
      <description>问题 最近一直用 jupyter notebook 写代码，因为要跑的代码比较长，所以导致整个页面都比较长，导致找到之前写的代码比较困难，这个时候就想着能不能有个目录来显示整个页面的内容，结果发现其实是可以的，就是用的 Jupyter Nbextensions Configurator，里面有许多扩展功能。
安装扩展 对于使用 Anaconda 的用户，直接使用下面的指令（实际安装中发现要运行这个代码两次）
conda install -c conda-forge jupyter_nbextensions_configurator  对于使用 pip 的用户，需要用到下面两个指令
pip install jupyter_nbextensions_configurator  针对特定用户
jupyter nbextensions_configurator enable --user  访问设置 访问 http://localhost:8888/tree，你就可以看到nbextensions, 看到Table of contents，就可以进行设置了</description>
    </item>
    
    <item>
      <title>赵也平的报告</title>
      <link>/2018/10/18/%E8%B5%B5%E4%B9%9F%E5%B9%B3%E7%9A%84%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/18/%E8%B5%B5%E4%B9%9F%E5%B9%B3%E7%9A%84%E6%8A%A5%E5%91%8A/</guid>
      <description>药物开发流程 ![流程图]()
药物应该具有特性：
 新颖性，选择性 ADME 具有商业价值 副作用小（不要对心脏，内脏造成影响）  </description>
    </item>
    
    <item>
      <title>BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding论文学习</title>
      <link>/2018/10/15/bert-pre-training-of-deep-bidirectional-transformers-for-language-understanding/</link>
      <pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/15/bert-pre-training-of-deep-bidirectional-transformers-for-language-understanding/</guid>
      <description> 摘要 本文提出了一个新的语言表达方式叫做 BERT ，代表着Bidirectional Encoder Representations from Transformers。不想其他的语言表达模型，BERT 就是为预处理深度双向表达设计的。因此，BERT可以通过增加一层输出层来实现多种任务，例如问题回答和语言推断，不需要专门针对一个任务来改进结构。BERT是概念上简单以及非常有效，在11个自然语言问题处理很有效果。
正文 </description>
    </item>
    
    <item>
      <title>研究思路</title>
      <link>/2018/10/12/%E7%A0%94%E7%A9%B6%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/12/%E7%A0%94%E7%A9%B6%E6%80%9D%E8%B7%AF/</guid>
      <description> Causality(因果关系) 数据驱动的方法关键在于是否建立了变量之间的因果关系模型。我们所说的两个变量之间的因果关系，是指如果其中一个变量发生了变化，另外一个变量是否会发生相应的变化。数据驱动的模型中变量之间的因果关系完全由数据决定，以及经验模型。如果操作变量没有独立的变化，那么这些变量之间就没有因果关系。
思路：一个生产过程的状态往往与其生产目标对应，所以应该将模型与输出*y*进行对应，建立条件概率因果关系，针对不同的状态得到不同的因果关系。所以应该将因果关系建立成条件因果关系。
paper(论文)  Input Design for Online Fault Diagnosis of Nonlinear Systems with Stochastic Uncertainty  </description>
    </item>
    
    <item>
      <title>Hadoop搭建</title>
      <link>/2018/09/29/hadoop/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/29/hadoop/</guid>
      <description>小规模Spark集群搭建  此方法只适用于小规模机群搭建，对于大规模集群搭建，请学习脚本配置。本次搭建的服务器有六台，每台服务器的处理器为 Intel&amp;reg; Core&amp;trade; i5-3450 CPU @ 3.10GHz，内存为8GB。服务器的静态IP为166.111.17.69，搭建底层系统为centos7.0
 centos7.0安装  制作centos7.0 的光驱文件 安装master服务器时注意需要安装图形界面，因为学校联网需要认证 安装时，选择其他服务器时，选择安全工具和java平台 需要设置网络，可以在开始安装时设置网络。网络配置文件在目录/etc/sysconfig/net-work-scripts/下，将DNS设置为166.111.8.29和166.111.8.28（学校DNS服务器），以及将ONBOOT设置为on 网线连接，即可以进行配置  Hadoop2.6.0搭建 ssh登录免密码设置 以root的身份登录服务器，修改服务器的名称
nano /etc/hosts  修改配置文件
166.111.17.69 master 166.111.17.121 node1 166.111.17.122 node2 166.111.17.123 node3 166.111.17.124 node4 166.111.17.125 node5  在每一台服务器上添加名为hadoop用户
useradd hadoop passwd hadoop  在master服务器上产生密钥对，将公共秘钥分配给其他服务器
su hadoop ssh-keygen -t rsa ssh-copy-id -i ~/.ssh/id_rsa.pub hadoop@master ssh-copy-id -i ~/.ssh/id_rsa.pub hadoop@node1 ssh-copy-id -i ~/.ssh/id_rsa.pub hadoop@node2 ssh-copy-id -i ~/.ssh/id_rsa.pub hadoop@node3 ssh-copy-id -i ~/.</description>
    </item>
    
    <item>
      <title>Rstudio server安装脚本</title>
      <link>/2018/09/29/rstudio-server/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/29/rstudio-server/</guid>
      <description>Rstudio服务器安装脚本 # 安装 epel源 yum -y install epel-release # 更新 yum update # 获取R的安装包 wget https://cran.r-project.org/src/base/R-3/R-3.3.2.tar.gz tar zxvf R-3.3.2.tar.gz cd R-3.3.2.tar.gz # 安装gcc编译器 yum install glibc-headers gcc-c++ # 安装Fortran编译器 yum install gcc-gfortran # 安装 yum install readline-devel # 安装 yum install libXt-devel # 安装 ./configure --with-readline=no --with-x=no make make install # 安装 r # yum install r-base; # 安装r-studio wget https://download2.rstudio.org/rstudio-server-rhel-1.0.136-x86_64.rpm; sudo yum install --nogpgcheck rstudio-server-rhel-1.0.136-x86_64.rpm; # 检验 rstudio-server是否成功安装 rstudio-server verify-installation # 开放端口 8787 iptables -I INPUT -p tcp --dport 8787 -j ACCEPT; # 启动rstudio rstudio-server start  配置文件rsession.</description>
    </item>
    
    <item>
      <title>owncloud配置问题</title>
      <link>/2018/09/29/owncloud/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/29/owncloud/</guid>
      <description>owncloud安装的相关问题 安装命令： sudo rpm --import https://download.owncloud.org/download/repositories/stable/CentOS_7/repodata/repomd.xml.key； sudo curl -L https://download.owncloud.org/download/repositories/stable/CentOS_7/ce:stable.repo -o /etc/yum.repos.d/ownCloud.repo； sudo yum clean expire-cache； sudo yum install owncloud；  数据库安装： 安装出现的问题： 1.无法启动mysql
ERROR 2002 (HY000): Can&#39;t connect to local MySQL server through socket &#39;/var/lib/mysql/mysql.sock&#39; (2)
解决方法： sudo yum install mariadb-server sudo systemctl start mariadb
 开放端口  firewall-cmd --permanent --zone=public --add-port=8080/tcp iptables -I INPUT -p tcp --dport 80 -j ACCEPT
维护出现的问题 维护时候发现owncloud进入了维护模式，这个时候我们需要关掉这个模式：
sudo -u apache php occ maintenance:mode --off</description>
    </item>
    
    <item>
      <title>samba配置问题</title>
      <link>/2018/09/29/samba/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/29/samba/</guid>
      <description>Samba服务器配置  为了解决团队文件共享问题，决定搭建一个samba服务器来解决所有问题，下面就将samba服务搭建过程详细地写下来
 Samba服务安装 在centos系统中直接输入：yum install samba
Samba配置 Samba服务的配置文件在\etc\samba\smb.conf
配置实例  添加群组：groupadd admin 添加用户：useradd -g admin chengff 添加samba用户：smbpasswd -a chengff 创建共享文件夹：
mkdir /share/public chgrp admin /share/public chmod 770 /share/public chmod g+s /share/public  修改配置文件
[public] comment = Complete Public Folder path = /share/public browseable = yes guest ok = yes writable = yes directory mask = 0777 create mask =0666 valid users = @admin write list = @admin  开放端口，我在/home/chengff/openSamba.</description>
    </item>
    
    <item>
      <title>shiny包使用</title>
      <link>/2018/09/29/shiny/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/29/shiny/</guid>
      <description>#shiny包的使用 shiny作为Rstudio中一个非常重要的包，对于构建交互式的网页非常方便。一般由shiny构筑的网页，由两个文件构成:ui.R和server.R，下面分别对两者的组件进行介绍。 在运行程序的时候，需要将ui.R和server.R放入同一个文件夹之中
ui里面的一些组件 ui输入 ####ui.R一般的框架
library(shiny) shinyUI(fluidPage( # 标题 titlePanel(&amp;quot;title name&amp;quot;), # 边栏 sidebarPanel( #选择块 selectInput(&amp;quot;dataset&amp;quot;,&amp;quot;choose a dataset&amp;quot;,choices=c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;)) ) #主栏 mainPanel() ))  selectInput selectInput提供下拉菜单的选择，输入格式：
selectInput(&amp;quot;data&amp;quot;,&amp;quot;choose&amp;quot;,choices=c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;))
data是用于储存变量的名称（可以在server.R中以input$data调用），choose是输入说明，choices给出下拉变量的选择
numericInput 顾名思义，numericInput是用来输入数值类型数据，其输入格式： numericInput(&amp;quot;num&amp;quot;,&amp;quot;type a number&amp;quot;,10)
其中num是用于储存变量的名称（可以再server.R中以input$num调用），type a number是说明信息，10是输入的数据
checkboxInput勾选组件 有时候，我们可以选择某些图形是否出现，可以通过勾选是否要这个内容来实现，所以这个输入的变量只会出现TRUE或者FALSE，也就是说这个变量是bool型变量
checkboxInput(&amp;quot;out&amp;quot;,&amp;quot;Output&amp;quot;,FALSE)  其中out是用来储存bool型变量，Output是对变量进行的说明，FALSE是取值
checkboxGroupInput多勾选组件 有时候我们需要对内容进行多选，这样就需要多项选择
checkboxGroupInput(&amp;quot;cities&amp;quot;,&amp;quot;choose Cities&amp;quot;,cities)  这样子就可以实现多项选择了
sliderInput定制化滑动条 通过滑动滑动条来选择数据，是一件非常酷炫的事情，下面给出一个例子
sliderInput(&amp;quot;integer&amp;quot;,&amp;quot;Integer:&amp;quot;, min=0,max=1000,value=500,step=1)  其中integer用来储存变量，Interger:是说明，min代表着滑动条的最小值，max代表着滑动条的最大值，value代表着滑动条初始值，step代表着滑动条的间隔
若需要输入区间范围，可以增加两个变量，例如
sliderInput(&amp;quot;range&amp;quot;,&amp;quot;Range:&amp;quot;, min=0,max=1000,value=c(200,500))  其中range用来储存变量，只不过此时的变量变成了一个vector
radioButtons选项卡 我们常常会给出一些选项来，还是直接举例子：
radioButtons(&amp;quot;dist&amp;quot;,&amp;quot;Distribution type:&amp;quot;, list(&amp;quot;Norm&amp;quot;=&amp;quot;norm&amp;quot;, &amp;quot;Uniform&amp;quot;=&amp;quot;unif&amp;quot;, &amp;quot;Log-normal&amp;quot;=&amp;quot;lnorm&amp;quot;, &amp;quot;Exponential&amp;quot;=&amp;quot;exp&amp;quot; ) ), br(),  其中dist依旧是用于储存变量，Distribution依旧是对变量的说明，而list中，左端代表着展现出来选项，等号右边是选项对应的值，当然在server.</description>
    </item>
    
    <item>
      <title>Radix for Rmarkdown</title>
      <link>/2018/09/27/radix-for-rmarkdown/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/27/radix-for-rmarkdown/</guid>
      <description>1 关于Radix 1.1 Radix的新特性 1.2 installation 1.3 创建文件    1 关于Radix Radix 是新的 Rmarkdown 的模板，主要是方便科学技术写作，的确现在许多科学论文都以电子版的方式初版，有很多板式，如果真的可以统一一个格式，的确给科研工作者带来很多方便。
1.1 Radix的新特性 参考链接
Reader-friendly typography that adapts well to mobile devices.（界面友好，同时可以适应移动设备）
 Features essential to technical writing like LaTeX math, citations, and footnotes. (支持Latex数学公式，引用和脚注)
 Flexible figure layout options (弹性的图片图层，例如图片长度可以比文章长)
 Attractively rendered tables with optional support for pagination. (表可以增加页码)
 Support for a wide variety of diagramming tools for illustrating concepts.(支持多种流程图工具，例如DiagrammeR)</description>
    </item>
    
    <item>
      <title>R语言有用的一些网站</title>
      <link>/2018/09/27/r/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/27/r/</guid>
      <description> ***.rstudio.com 数据库  数据库连接 数据库连接问题 初始化连接设置  交互  shiny shiny article Interactive Visualization with JavaScript and R Working with JavaScript Syntax in R  </description>
    </item>
    
    <item>
      <title>中秋假日</title>
      <link>/2018/09/25/%E4%B8%AD%E7%A7%8B%E5%81%87%E6%97%A5/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/25/%E4%B8%AD%E7%A7%8B%E5%81%87%E6%97%A5/</guid>
      <description>中秋假期和我家亲爱的一起去扬州玩耍了。古人云：烟花三月下扬州，以后得找个机会三月份去看一下。因为从上海没有直接达到扬州的火车，我们选择从上海到南京，再从南京到扬州的方案。其实后面发现可以从上海到镇江，再从镇江坐大巴车到扬州，这样子时间上和金钱上更加节省。我从北京出发的时候，直接到 北京西 ，实际上票是 北京南 ， 惯性思维就是这么强大，还好及时赶上。出租车从 北京西 到 北京南 大概二十分钟左右。
中秋旅行计划 出行信息    日期 人员 车次 始发站时间 终点站时间 备注     2018/09/21 我 G155 北京南 &amp;nbsp; 15：45 南京南 20：04    2018/09/21 小姨妈 G7062 上海 &amp;nbsp; 19：32 南京 &amp;nbsp; 21：33 上海站 ，浦电路到上海站30分钟左右   2018/09/22 我和小姨妈 D5502 南京 &amp;nbsp; 07：00 扬州 &amp;nbsp; 07：51 无座，需早起   2018/09/23 我和小姨妈 D5534 扬州 &amp;nbsp; 17：53 南京 &amp;nbsp; 18：41    2018/09/23 我和小姨妈 G7067 南京 &amp;nbsp; 19：43 上海 &amp;nbsp; 21：47 上海站距离人民广场两站，可以考虑去夹娃娃   2018/09/25 我 G8 上海虹桥 08：00 北京南 &amp;nbsp; 12：24 退票，重新购买该火车票    住宿信息    日期 地点 人员 酒店     09/21-09/22 南京站 我和小姨妈 汉庭（南京火车站店）   09/22-09/23 扬州 我和小姨妈 如家酒店（扬州瘦西湖店）或 扬州文昌阁智选假日酒店    旅行信息    时间 旅行地点     9/22上午 瘦西湖风景区，大明寺，小运河   9/22下午 个园，汪氏小苑   9/22晚上 东关街，文昌阁   9/22上午 何园，朱自清故居   9/22下午 吃吃喝喝    美食信息    时间 美食地点 美食推荐     早餐 冶春茶社 蟹黄汤包，五丁包，烫干丝等   午餐 大闸蟹 亦鲜红膏大闸蟹 or 阳澄湖大闸蟹   晚餐 东关街小吃 江南一品   早餐 冶春茶社 蟹黄汤包，五丁包，烫干丝等   午餐 卢氏古宅 清炖狮子头，扬州蛋炒饭，翡翠烧麦   晚餐 老扬州（南京鸭血粉丝汤） 蟹粉扬州干丝，大麻球    补充信息 提前计划的旅行玩得还是非常开心的，每天安排也非常不错，欣赏到扬州瘦西湖的美，也看到了鉴真东渡前修建的大明寺，夜晚坐船游小运河。吃到了扬州早餐，怡园的蟹黄汤包不错，但是没有试它家的三丁包。另外印象养身馆的按摩不错，下次去还可以去体验一下，虽然等位比较辛苦。期待和小姨妈下一次旅行。</description>
    </item>
    
    <item>
      <title>Jupyter notebook服务器端安装</title>
      <link>/2018/09/19/jupyter-notebook/</link>
      <pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/19/jupyter-notebook/</guid>
      <description>因为之前一直使用团队服务器挂掉了，现在开始用组内的服务器。平常用习惯了 Jupyter notebook ，所以也考虑在组内服务器上使用，并在网页端访问。其实整个配置过程非常简单。一般在服务器上安装了Anaconda之后，就会自带 Jupyter notebook ，因此就只剩下配置了。
 配置过程  生成配置文件
jupyter notebook --generate-config   进入 python 界面中，使用命令设置 password  from notebook.auth import passwd passwd()  或者是
$ jupyter notebook password   生成ssl证书  openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout mykey.key -out mycert.pem   更改配置文件 /root/.jupyter/jupyter_notebook_config.py  # Set options for certfile, ip, password, and toggle off # browser auto-opening c.NotebookApp.certfile = u&#39;/absolute/path/to/your/certificate/mycert.pem&#39; c.NotebookApp.keyfile = u&#39;/absolute/path/to/your/certificate/mykey.</description>
    </item>
    
    <item>
      <title>2018年第一次组会</title>
      <link>/2018/09/17/2018/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/17/2018/</guid>
      <description>毕可鑫：中粮米粒留皮率识别和碎米识别，留皮率识别利用颜色区别（KNN算法），碎米率利用米粒长径来判断
刘昊雨：氢燃料电池，存在诸多薄弱环节，需要消除产业发展制约因素。</description>
    </item>
    
    <item>
      <title>条件变分自动编码器（Conditional variational auoencoder）</title>
      <link>/2018/09/17/conditional-variational-auoencoder/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/17/conditional-variational-auoencoder/</guid>
      <description>1 概述 2 Getting started 2.1 A small example 2.2 variational autoencoder    1 概述 keras 作为深度学习的框架之一，之前一直用 python 来写 keras 的代码，但是R语言支持keras，有一个想法就是，利用条件自动编码器来生成数据用于训练，所以用 R 中 keras 来编写一下模型。
 2 Getting started 安装 keras 的包
install.packages(&amp;quot;keras&amp;quot;) keras 默认使用 tensorflow 作为后台，如果需要更改，请参见install_keras()的帮助
library(keras) ## Warning: 程辑包&amp;#39;keras&amp;#39;是用R版本3.4.4 来建造的 install_keras() ## Creating virtualenv for TensorFlow at ~/.virtualenvs/r-tensorflow ## Installing TensorFlow ... ## ## Installation complete. 2.1 A small example # prepare data library(keras) mnist &amp;lt;- dataset_mnist() x_train &amp;lt;- mnist$train$x y_train &amp;lt;- mnist$train$y x_test &amp;lt;- mnist$test$x y_test &amp;lt;- mnist$test$y # reshape x_train &amp;lt;- array_reshape(x_train, c(nrow(x_train), 784)) x_test &amp;lt;- array_reshape(x_test, c(nrow(x_test), 784)) # rescale x_train &amp;lt;- x_train / 255 x_test &amp;lt;- x_test / 255 y_train &amp;lt;- to_categorical(y_train, 10) y_test &amp;lt;- to_categorical(y_test, 10) # define the model model &amp;lt;- keras_model_sequential() model %&amp;gt;% layer_dense(units = 256, activation = &amp;#39;relu&amp;#39;, input_shape = c(784)) %&amp;gt;% layer_dropout(rate = 0.</description>
    </item>
    
    <item>
      <title>感情的问题</title>
      <link>/2018/09/16/%E6%84%9F%E6%83%85%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/16/%E6%84%9F%E6%83%85%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>感情其实是一件非常微妙的事情，让一个大气的男人变得小气。另外一个方面，我也有许多做的不对的地方。
 太幼稚了，完全没有考虑我女朋友工作的辛苦，也没有体会她的委屈，她把最珍贵的年华给了我，但是我却因为一时吃醋，而意气用事。加上女朋友的工作很忙，又来了大姨妈，每次都是火上浇油。
 如果女朋友生气了，第一件事情就是认错，她怎么骂，都一直在认错。然后不停的道歉，不停地给她发红包，反正就不应该让她觉得受到了冷落。
 生气之后，第一时间打电话给她，认错悔改。重要的是态度，而不是道理。
  的确感觉每次女朋友生气之后，我都有一些无奈。男生的确应该迁就一下女生，不能这么小气。</description>
    </item>
    
    <item>
      <title>First blogdown</title>
      <link>/2018/09/15/first-blogdown/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/15/first-blogdown/</guid>
      <description>第一篇博文 非常感谢yihui xie写出的 blogdown ，因为他用不习惯写 blog 的一些软件，才有了 blogdown 。的确是找到了痛点，才能够有所进步。感觉在清华本科毕业之后，博士生涯的进步都非常慢，一部分因为自己懈怠了，另外一部分可能是自己的研究并没有解决生活中的痛点。其实，我一直都想着成为一个金融行业的从业者，但是因为自己随波逐流，还在原来的专业里面，成为了一个化工的博士。虽然是数据方向，但是老师给的指导有限，导致研究的进展非常缓慢。而且我自己也是一个完美主义的人，任何事情想着怎么才可以做的完美，导致自己写的文章很少，而且经常追求那些华而不实的东西；另外一个方面，我是一个不喜欢总结，老是喜欢学新东西的人，这一点的确是让人烦恼，基本上别人提的东西你都有一个大致的概念，但是没有特别深入了解。
写下这个博客，也是因为这句话‘你会记得你所写下的，但是你会忘记你所学以及所说的’，与君共勉。</description>
    </item>
    
    <item>
      <title>Rmarkdown中的dashboard</title>
      <link>/2018/09/15/rmarkdown-dashboard/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/15/rmarkdown-dashboard/</guid>
      <description> Dashboard 最近因为项目的需求，需要做一个演示的网站。之前对于R语言中的dashboard有一些印象，所以准备用dashboard做一个。
关于Dashboard学习的一些网站：
 flexdashboard R Markdown: The Definitive Guide  在dashboard中，首先将需要的包和内容放在setup里
library(dygraphs)  在dashboard中，每个页面的分级用
=========================================
页面中每一栏可以用
Column -----------------------------------------  每一节内容可以markdown的三号标题替代，这里要说tabnet的性质，如果不想整个页面在Dashboard上铺开，在后面加上这个性质
另外，要在dashboard上增加shiny的组件，可以考虑在目标栏上添加
runtime: shiny  </description>
    </item>
    
  </channel>
</rss>